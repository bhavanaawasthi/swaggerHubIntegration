/*
 * Res.Grosvenor - Rank
 *
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class LoyaltyV20ApiController : Controller
    { 

        /// <summary>
        /// Accrue loyalty points
        /// </summary>
        /// <remarks>Issue loyalty points to the specified account. | Name              | Type      | Required                             | Description                                   | Example           | |:- --               |:- --       |:- --                                  |:- --                                           |:- --               | |CardNo             |int        |yes                                   |Number on the back of the membership card      |570515106          | |LocationId         |string     |yes                                   |Casion locationId                              |005Bar,FOOD        | |Points             |int        |yes                                   |points that needs adjusting                    |100                    | |TransactionDateTime |DateTime   |yes                                  |Transaction Date and time .                    |2015-04-28T10:10:25Z   |</remarks>
        /// <param name="body"></param>
        /// <response code="200"></response>
        /// <response code="400">Unexpected error in API call. See HTTP response body for details.</response>
        /// <response code="404">Unexpected error in API call. See HTTP response body for details.</response>
        /// <response code="0">Unexpected error in API call. See HTTP response body for details.</response>
        [HttpPut]
        [Route("//loyalty/v2/points/")]
        [SwaggerOperation("AccrueLoyaltyPoints")]
        public virtual void AccrueLoyaltyPoints([FromBody]AccrueLoyaltyPointsRequest body)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Create Loyalty Account for Digital Membership Account
        /// </summary>
        /// <remarks>Managing actions for digital and retail loyalty accounts. Registers a digital customer in the loyalty system. | Name          | Type      | Required  | Description                                       | Example           | |:- --           |:- --       |:- --       |:- --                                               |:- --               | |PlayerId       |long       |yes        |Customer identifier from the digital platform.     |570515106383925248 | |Forename       |string     |yes        |first name of the customer                         |\&quot;Bob\&quot;              | |Surname        |string     |yes        |Last name of the customer                          |\&quot;Marley\&quot;           | |DateOfBirth    |Date       |yes        |Date of birth of the customer.                     |1982-04-28         |</remarks>
        /// <param name="body"></param>
        /// <response code="201"></response>
        [HttpPost]
        [Route("//loyalty/v2/accounts/digital")]
        [SwaggerOperation("CreateLoyaltyAccountForDigitalMembershipAccount")]
        public virtual void CreateLoyaltyAccountForDigitalMembershipAccount([FromBody]CreateLoyaltyAccountForDigitalMembershipAccountRequest body)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Create Loyalty Account for Retail Membership Account
        /// </summary>
        /// <remarks>Registers a retail customer in the loyalty system.</remarks>
        /// <param name="body"></param>
        /// <response code="201"></response>
        [HttpPost]
        [Route("//loyalty/v2/accounts/retail")]
        [SwaggerOperation("CreateLoyaltyAccountForRetailMembershipAccount")]
        public virtual void CreateLoyaltyAccountForRetailMembershipAccount([FromBody]CreateLoyaltyAccountForRetailMembershipAccountRequest body)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Link existing Retail Loyalty Account to new Digital Membership Account
        /// </summary>
        /// <remarks>Adding newly created digital account to the existing retail loyalty account and returns the points balance. Request body fields: | Name              | Type      | Required  | Description                                   | Example           | |:- --               |:- --       |:- --       |:- --                                           |:- --               | |PlayerId           |long       |Yes        |Customer identifier from the digital platform. |570515106383925248 | |MembershipNo       |string     |Yes        |Retail Casino membership number.               |123456789         |</remarks>
        /// <param name="body"></param>
        /// <response code="200"></response>
        [HttpPatch]
        [Route("//loyalty/v2/accounts/retail")]
        [SwaggerOperation("LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccount")]
        [SwaggerResponse(200, type: typeof(LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountResponse))]
        public virtual IActionResult LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccount([FromBody]LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountRequest body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountResponse>(exampleJson)
            : default(LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountResponse);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Merge existing Digital and Retail Loyalty Accounts - flavour 2
        /// </summary>
        /// <remarks>This method is a varient of the above method, which links the existing digital and retail loyalty accounts and merges the points earned. Returns the combined points balance. This can be used when retail membership number is not available to the client. Request body fields: | Name              | Type      | Required  | Description                                   | Example           | |:- --               |:- --       |:- --       |:- --                                           |:- --               | |PlayerId           |long       |Yes        |Customer identifier from the digital platform. |570515106383925248 | |CardNo             |long       |Yes        |Player loyalty Card number                     |1460040108         | |DateofBirth        |Date       |yes        |Date of birth of the customer.                 |1982-04-28         |</remarks>
        /// <param name="body"></param>
        /// <response code="200"></response>
        [HttpPost]
        [Route("//loyalty/v2/accounts/merge")]
        [SwaggerOperation("MergeExistingDigitalAndRetailLoyaltyAccountsFlavour2")]
        [SwaggerResponse(200, type: typeof(MergeExistingDigitalAndRetailLoyaltyAccountsFlavour1Response))]
        public virtual IActionResult MergeExistingDigitalAndRetailLoyaltyAccountsFlavour2([FromBody]MergeExistingDigitalAndRetailLoyaltyAccountsFlavour2Request body)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<MergeExistingDigitalAndRetailLoyaltyAccountsFlavour1Response>(exampleJson)
            : default(MergeExistingDigitalAndRetailLoyaltyAccountsFlavour1Response);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Redeem loyalty points
        /// </summary>
        /// <remarks>Redeem loyalty points from the specified account. | Name              | Type      | Required                                  | Description                                   | Example           | |:- --               |:- --       |:- --                                       |:- --                                           |:- --               | |CardNo             |int        |optional (Required only for Retail)        |Number on the back of the membership card      |570515106          | |LocationId         |string     |optional (Required only for Retail)        |Casion locationId                              |005Bar,FOOD        | |PlayerId           |long       |optional (Required only for digital)       |Customer identifier from the digital platform. |570515106383925248     | |Points             |int        |Required                                   |points that needs adjusting                    |100                    | |RedeemDateTime     |DateTime   |yes                                        |Date and time of the redemption call.          |2015-04-28T10:10:25Z   |</remarks>
        /// <param name="body"></param>
        /// <response code="200"></response>
        /// <response code="400">Unexpected error in API call. See HTTP response body for details.</response>
        /// <response code="404">Unexpected error in API call. See HTTP response body for details.</response>
        /// <response code="0">Unexpected error in API call. See HTTP response body for details.</response>
        [HttpDelete]
        [Route("//loyalty/v2/points/")]
        [SwaggerOperation("RedeemLoyaltyPoints")]
        public virtual void RedeemLoyaltyPoints([FromBody]RedeemLoyaltyPointsRequest body)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// Retrieve all Accounts Summary by Grade
        /// </summary>
        /// <remarks>Retrieves a summary information about each customer, who belongs to the specified grade. The below parameter is required.</remarks>
        /// <param name="grade">A grouping of customers by certain properties. Possible values: MEMBER, GOLD, BLACK.</param>
        /// <response code="200"></response>
        [HttpGet]
        [Route("//loyalty/v2/accounts/summary")]
        [SwaggerOperation("RetrieveAllAccountsSummaryByGrade")]
        [SwaggerResponse(200, type: typeof(RetrieveAllAccountsSummaryByGradeResponse))]
        public virtual IActionResult RetrieveAllAccountsSummaryByGrade([FromQuery]string grade)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RetrieveAllAccountsSummaryByGradeResponse>(exampleJson)
            : default(RetrieveAllAccountsSummaryByGradeResponse);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Retrieve Points balance
        /// </summary>
        /// <remarks>Retrieves loyalty points balance for the customer, any one of the below parameters is required. | Name          | Type  | Description                                       | Example           | |:- --           |:- --   |:- --                                               |:- --               | |playerId       |long   |Customer identifier from the digital platform.     |570515106383925248 | |cardNo         |int    |Number on the back of the membership card.(retail) |16227376           | |membershipNo   |string |Retail Casino membership number.                   |1850034070         |</remarks>
        /// <param name="playerId">Customer identifier from the digital platform</param>
        /// <param name="cardNo">Number on the back of the membership card. If specified, then Grade will be returned.</param>
        /// <param name="membershipNo">Retail Casino membership number.</param>
        /// <response code="200"></response>
        /// <response code="404">Unexpected error in API call. See HTTP response body for details.</response>
        /// <response code="0">Unexpected error in API call. See HTTP response body for details.</response>
        [HttpGet]
        [Route("//loyalty/v2/points/")]
        [SwaggerOperation("RetrievePointsBalance1")]
        [SwaggerResponse(200, type: typeof(RetrievePointsBalanceResponse17))]
        public virtual IActionResult RetrievePointsBalance1([FromQuery]long? playerId, [FromQuery]int? cardNo, [FromQuery]string membershipNo)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RetrievePointsBalanceResponse17>(exampleJson)
            : default(RetrievePointsBalanceResponse17);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Retrieves  customer details by the specified card number.
        /// </summary>
        /// <remarks>Retrieves customer profile information by cardNo. | Name          | Type  | Required                                              | Description                                       | Example           | |:- --           |:- --   |:- --                                                   |:- --                                               |:- --               | CardNo          |int    | Yes                                                   |Number on the back of the membership card.(retail) |16227376           |</remarks>
        /// <param name="cardNo">Number on the back of the membership card for retail</param>
        /// <response code="200"></response>
        /// <response code="404">Unexpected error in API call. See HTTP response body for details.</response>
        /// <response code="0">Unexpected error in API call. See HTTP response body for details.</response>
        [HttpGet]
        [Route("//loyalty/v2/accounts/")]
        [SwaggerOperation("RetrievesCustomerDetailsByTheSpecifiedCardNumber_")]
        [SwaggerResponse(200, type: typeof(RetrievesCustomerDetailsByTheSpecifiedCardNumberResponse))]
        public virtual IActionResult RetrievesCustomerDetailsByTheSpecifiedCardNumber_([FromQuery]int? cardNo)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RetrievesCustomerDetailsByTheSpecifiedCardNumberResponse>(exampleJson)
            : default(RetrievesCustomerDetailsByTheSpecifiedCardNumberResponse);
            return new ObjectResult(example);
        }


        /// <summary>
        /// Update Loyalty Account for Retail Membership Account
        /// </summary>
        /// <remarks>Updates the existing retail loyalty account with specified values.</remarks>
        /// <param name="body"></param>
        /// <response code="200"></response>
        [HttpPut]
        [Route("//loyalty/v2/accounts/retail")]
        [SwaggerOperation("UpdateLoyaltyAccountForRetailMembershipAccount")]
        public virtual void UpdateLoyaltyAccountForRetailMembershipAccount([FromBody]UpdateLoyaltyAccountForRetailMembershipAccountRequest body)
        { 
            throw new NotImplementedException();
        }
    }
}
