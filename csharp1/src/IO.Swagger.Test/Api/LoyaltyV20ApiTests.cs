/* 
 * Res.Grosvenor - Rank
 *
 * Rank Enterprise Services API is a collection of business services exposed over a RESTful inteface. This endpoint is specific to Grosvenor Casinos implementation.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing LoyaltyV20Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LoyaltyV20ApiTests
    {
        private LoyaltyV20Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LoyaltyV20Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LoyaltyV20Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LoyaltyV20Api
            //Assert.IsInstanceOfType(typeof(LoyaltyV20Api), instance, "instance is a LoyaltyV20Api");
        }

        
        /// <summary>
        /// Test AccrueLoyaltyPoints
        /// </summary>
        [Test]
        public void AccrueLoyaltyPointsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AccrueLoyaltyPointsRequest body = null;
            //instance.AccrueLoyaltyPoints(body);
            
        }
        
        /// <summary>
        /// Test CreateLoyaltyAccountForDigitalMembershipAccount
        /// </summary>
        [Test]
        public void CreateLoyaltyAccountForDigitalMembershipAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateLoyaltyAccountForDigitalMembershipAccountRequest body = null;
            //instance.CreateLoyaltyAccountForDigitalMembershipAccount(body);
            
        }
        
        /// <summary>
        /// Test CreateLoyaltyAccountForRetailMembershipAccount
        /// </summary>
        [Test]
        public void CreateLoyaltyAccountForRetailMembershipAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateLoyaltyAccountForRetailMembershipAccountRequest body = null;
            //instance.CreateLoyaltyAccountForRetailMembershipAccount(body);
            
        }
        
        /// <summary>
        /// Test LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccount
        /// </summary>
        [Test]
        public void LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountRequest body = null;
            //var response = instance.LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccount(body);
            //Assert.IsInstanceOf<LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountResponse> (response, "response is LinkExistingRetailLoyaltyAccountToNewDigitalMembershipAccountResponse");
        }
        
        /// <summary>
        /// Test MergeExistingDigitalAndRetailLoyaltyAccountsFlavour2
        /// </summary>
        [Test]
        public void MergeExistingDigitalAndRetailLoyaltyAccountsFlavour2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MergeExistingDigitalAndRetailLoyaltyAccountsFlavour2Request body = null;
            //var response = instance.MergeExistingDigitalAndRetailLoyaltyAccountsFlavour2(body);
            //Assert.IsInstanceOf<MergeExistingDigitalAndRetailLoyaltyAccountsFlavour1Response> (response, "response is MergeExistingDigitalAndRetailLoyaltyAccountsFlavour1Response");
        }
        
        /// <summary>
        /// Test RedeemLoyaltyPoints
        /// </summary>
        [Test]
        public void RedeemLoyaltyPointsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RedeemLoyaltyPointsRequest body = null;
            //instance.RedeemLoyaltyPoints(body);
            
        }
        
        /// <summary>
        /// Test RetrieveAllAccountsSummaryByGrade
        /// </summary>
        [Test]
        public void RetrieveAllAccountsSummaryByGradeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string grade = null;
            //var response = instance.RetrieveAllAccountsSummaryByGrade(grade);
            //Assert.IsInstanceOf<RetrieveAllAccountsSummaryByGradeResponse> (response, "response is RetrieveAllAccountsSummaryByGradeResponse");
        }
        
        /// <summary>
        /// Test RetrievePointsBalance1
        /// </summary>
        [Test]
        public void RetrievePointsBalance1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? playerId = null;
            //int? cardNo = null;
            //string membershipNo = null;
            //var response = instance.RetrievePointsBalance1(playerId, cardNo, membershipNo);
            //Assert.IsInstanceOf<RetrievePointsBalanceResponse17> (response, "response is RetrievePointsBalanceResponse17");
        }
        
        /// <summary>
        /// Test RetrievesCustomerDetailsByTheSpecifiedCardNumber_
        /// </summary>
        [Test]
        public void RetrievesCustomerDetailsByTheSpecifiedCardNumber_Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? cardNo = null;
            //var response = instance.RetrievesCustomerDetailsByTheSpecifiedCardNumber_(cardNo);
            //Assert.IsInstanceOf<RetrievesCustomerDetailsByTheSpecifiedCardNumberResponse> (response, "response is RetrievesCustomerDetailsByTheSpecifiedCardNumberResponse");
        }
        
        /// <summary>
        /// Test UpdateLoyaltyAccountForRetailMembershipAccount
        /// </summary>
        [Test]
        public void UpdateLoyaltyAccountForRetailMembershipAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateLoyaltyAccountForRetailMembershipAccountRequest body = null;
            //instance.UpdateLoyaltyAccountForRetailMembershipAccount(body);
            
        }
        
    }

}
