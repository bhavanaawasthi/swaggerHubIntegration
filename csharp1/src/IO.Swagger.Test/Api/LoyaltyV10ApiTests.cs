/* 
 * Res.Grosvenor - Rank
 *
 * Rank Enterprise Services API is a collection of business services exposed over a RESTful inteface. This endpoint is specific to Grosvenor Casinos implementation.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing LoyaltyV10Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LoyaltyV10ApiTests
    {
        private LoyaltyV10Api instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LoyaltyV10Api();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LoyaltyV10Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LoyaltyV10Api
            //Assert.IsInstanceOfType(typeof(LoyaltyV10Api), instance, "instance is a LoyaltyV10Api");
        }

        
        /// <summary>
        /// Test AddDigitalAccount
        /// </summary>
        [Test]
        public void AddDigitalAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddDigitalAccountRequest body = null;
            //var response = instance.AddDigitalAccount(body);
            //Assert.IsInstanceOf<AddDigitalAccountResponse> (response, "response is AddDigitalAccountResponse");
        }
        
        /// <summary>
        /// Test CreateCustomersPlaypointsAccount
        /// </summary>
        [Test]
        public void CreateCustomersPlaypointsAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateCustomersPlaypointsAccountRequest body = null;
            //instance.CreateCustomersPlaypointsAccount(body);
            
        }
        
        /// <summary>
        /// Test MergeDigitalAndRetailAccountsFlavour2
        /// </summary>
        [Test]
        public void MergeDigitalAndRetailAccountsFlavour2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MergeDigitalAndRetailAccountsFlavour2Request body = null;
            //var response = instance.MergeDigitalAndRetailAccountsFlavour2(body);
            //Assert.IsInstanceOf<MergeDigitalAndRetailAccountsFlavour1Response> (response, "response is MergeDigitalAndRetailAccountsFlavour1Response");
        }
        
        /// <summary>
        /// Test RedeemPoints
        /// </summary>
        [Test]
        public void RedeemPointsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RedeemPointsRequest body = null;
            //instance.RedeemPoints(body);
            
        }
        
        /// <summary>
        /// Test RetrievePointsBalance
        /// </summary>
        [Test]
        public void RetrievePointsBalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? playerId = null;
            //double? cardNo = null;
            //string membershipNo = null;
            //var response = instance.RetrievePointsBalance(playerId, cardNo, membershipNo);
            //Assert.IsInstanceOf<RetrievePointsBalanceResponse> (response, "response is RetrievePointsBalanceResponse");
        }
        
    }

}
