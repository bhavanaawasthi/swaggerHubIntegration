/* 
 * Res.Grosvenor - Rank
 *
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using RestSharp;
using IO.Swagger.Client;
using IO.Swagger.Model;

namespace IO.Swagger.Api
{
    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IRetailMembershipV10Api : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Get lookup values
        /// </summary>
        /// <remarks>
        /// All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>GetLookupValuesResponse</returns>
        GetLookupValuesResponse GetLookupValues (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null);

        /// <summary>
        /// Get lookup values
        /// </summary>
        /// <remarks>
        /// All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>ApiResponse of GetLookupValuesResponse</returns>
        ApiResponse<GetLookupValuesResponse> GetLookupValuesWithHttpInfo (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null);
        /// <summary>
        /// Lookup
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>LookupResponse2</returns>
        LookupResponse2 Lookup1 (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null);

        /// <summary>
        /// Lookup
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>ApiResponse of LookupResponse2</returns>
        ApiResponse<LookupResponse2> Lookup1WithHttpInfo (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null);
        /// <summary>
        /// Register - This operation is disabled
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns></returns>
        void RegisterThisOperationIsDisabled (RegisterThisOperationIsDisabledRequest body);

        /// <summary>
        /// Register - This operation is disabled
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> RegisterThisOperationIsDisabledWithHttpInfo (RegisterThisOperationIsDisabledRequest body);
        #endregion Synchronous Operations
        #region Asynchronous Operations
        /// <summary>
        /// Get lookup values
        /// </summary>
        /// <remarks>
        /// All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>Task of GetLookupValuesResponse</returns>
        System.Threading.Tasks.Task<GetLookupValuesResponse> GetLookupValuesAsync (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null);

        /// <summary>
        /// Get lookup values
        /// </summary>
        /// <remarks>
        /// All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>Task of ApiResponse (GetLookupValuesResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<GetLookupValuesResponse>> GetLookupValuesAsyncWithHttpInfo (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null);
        /// <summary>
        /// Lookup
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>Task of LookupResponse2</returns>
        System.Threading.Tasks.Task<LookupResponse2> Lookup1Async (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null);

        /// <summary>
        /// Lookup
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>Task of ApiResponse (LookupResponse2)</returns>
        System.Threading.Tasks.Task<ApiResponse<LookupResponse2>> Lookup1AsyncWithHttpInfo (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null);
        /// <summary>
        /// Register - This operation is disabled
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task RegisterThisOperationIsDisabledAsync (RegisterThisOperationIsDisabledRequest body);

        /// <summary>
        /// Register - This operation is disabled
        /// </summary>
        /// <remarks>
        /// Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </remarks>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> RegisterThisOperationIsDisabledAsyncWithHttpInfo (RegisterThisOperationIsDisabledRequest body);
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class RetailMembershipV10Api : IRetailMembershipV10Api
    {
        private IO.Swagger.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="RetailMembershipV10Api"/> class.
        /// </summary>
        /// <returns></returns>
        public RetailMembershipV10Api(String basePath)
        {
            this.Configuration = new Configuration(new ApiClient(basePath));

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RetailMembershipV10Api"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public RetailMembershipV10Api(Configuration configuration = null)
        {
            if (configuration == null) // use the default one in Configuration
                this.Configuration = Configuration.Default;
            else
                this.Configuration = configuration;

            ExceptionFactory = IO.Swagger.Client.Configuration.DefaultExceptionFactory;

            // ensure API client has configuration ready
            if (Configuration.ApiClient.Configuration == null)
            {
                this.Configuration.ApiClient.Configuration = this.Configuration;
            }
        }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.ApiClient.RestClient.BaseUrl.ToString();
        }

        /// <summary>
        /// Sets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        [Obsolete("SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\"http://new-path\")' instead.")]
        public void SetBasePath(String basePath)
        {
            // do nothing
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Configuration Configuration {get; set;}

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public IO.Swagger.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Gets the default header.
        /// </summary>
        /// <returns>Dictionary of HTTP header</returns>
        [Obsolete("DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.")]
        public Dictionary<String, String> DefaultHeader()
        {
            return this.Configuration.DefaultHeader;
        }

        /// <summary>
        /// Add default header.
        /// </summary>
        /// <param name="key">Header field name.</param>
        /// <param name="value">Header field value.</param>
        /// <returns></returns>
        [Obsolete("AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.")]
        public void AddDefaultHeader(string key, string value)
        {
            this.Configuration.AddDefaultHeader(key, value);
        }

        /// <summary>
        /// Get lookup values All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>GetLookupValuesResponse</returns>
        public GetLookupValuesResponse GetLookupValues (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null)
        {
             ApiResponse<GetLookupValuesResponse> localVarResponse = GetLookupValuesWithHttpInfo(includeNationalities, includeCountries, incldueCasinos, includeTitles);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Get lookup values All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>ApiResponse of GetLookupValuesResponse</returns>
        public ApiResponse< GetLookupValuesResponse > GetLookupValuesWithHttpInfo (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null)
        {

            var localVarPath = "/retailmembership/v1/lookups";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (includeNationalities != null) localVarQueryParams.Add("includeNationalities", Configuration.ApiClient.ParameterToString(includeNationalities)); // query parameter
            if (includeCountries != null) localVarQueryParams.Add("includeCountries", Configuration.ApiClient.ParameterToString(includeCountries)); // query parameter
            if (incldueCasinos != null) localVarQueryParams.Add("incldueCasinos", Configuration.ApiClient.ParameterToString(incldueCasinos)); // query parameter
            if (includeTitles != null) localVarQueryParams.Add("includeTitles", Configuration.ApiClient.ParameterToString(includeTitles)); // query parameter

            // authentication (auth) required
            // http basic authentication required
            if (!String.IsNullOrEmpty(Configuration.Username) || !String.IsNullOrEmpty(Configuration.Password))
            {
                localVarHeaderParams["Authorization"] = "Basic " + ApiClient.Base64Encode(Configuration.Username + ":" + Configuration.Password);
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetLookupValues", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<GetLookupValuesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (GetLookupValuesResponse) Configuration.ApiClient.Deserialize(localVarResponse, typeof(GetLookupValuesResponse)));
            
        }

        /// <summary>
        /// Get lookup values All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>Task of GetLookupValuesResponse</returns>
        public async System.Threading.Tasks.Task<GetLookupValuesResponse> GetLookupValuesAsync (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null)
        {
             ApiResponse<GetLookupValuesResponse> localVarResponse = await GetLookupValuesAsyncWithHttpInfo(includeNationalities, includeCountries, incldueCasinos, includeTitles);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Get lookup values All lookup valus are provided through this single endpoint. The consuming application can request which lookup value list to be included in the response. if any of the parameter ommitted from the questring parameter or supplied value &#x60;false&#x60;, the response will not include the key and value (list) for category.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="includeNationalities">include nationality look up values in the response (optional)</param>
        /// <param name="includeCountries">include country look up values in the response (optional)</param>
        /// <param name="incldueCasinos">include casino look up values in the response (optional)</param>
        /// <param name="includeTitles">include title look up values in the response (optional)</param>
        /// <returns>Task of ApiResponse (GetLookupValuesResponse)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<GetLookupValuesResponse>> GetLookupValuesAsyncWithHttpInfo (bool? includeNationalities = null, bool? includeCountries = null, bool? incldueCasinos = null, bool? includeTitles = null)
        {

            var localVarPath = "/retailmembership/v1/lookups";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (includeNationalities != null) localVarQueryParams.Add("includeNationalities", Configuration.ApiClient.ParameterToString(includeNationalities)); // query parameter
            if (includeCountries != null) localVarQueryParams.Add("includeCountries", Configuration.ApiClient.ParameterToString(includeCountries)); // query parameter
            if (incldueCasinos != null) localVarQueryParams.Add("incldueCasinos", Configuration.ApiClient.ParameterToString(incldueCasinos)); // query parameter
            if (includeTitles != null) localVarQueryParams.Add("includeTitles", Configuration.ApiClient.ParameterToString(includeTitles)); // query parameter

            // authentication (auth) required
            // http basic authentication required
            if (!String.IsNullOrEmpty(Configuration.Username) || !String.IsNullOrEmpty(Configuration.Password))
            {
                localVarHeaderParams["Authorization"] = "Basic " + ApiClient.Base64Encode(Configuration.Username + ":" + Configuration.Password);
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("GetLookupValues", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<GetLookupValuesResponse>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (GetLookupValuesResponse) Configuration.ApiClient.Deserialize(localVarResponse, typeof(GetLookupValuesResponse)));
            
        }

        /// <summary>
        /// Lookup Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>LookupResponse2</returns>
        public LookupResponse2 Lookup1 (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null)
        {
             ApiResponse<LookupResponse2> localVarResponse = Lookup1WithHttpInfo(membershipNo, dateOfBirth, checkAlreadyUsed);
             return localVarResponse.Data;
        }

        /// <summary>
        /// Lookup Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>ApiResponse of LookupResponse2</returns>
        public ApiResponse< LookupResponse2 > Lookup1WithHttpInfo (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null)
        {
            // verify the required parameter 'membershipNo' is set
            if (membershipNo == null)
                throw new ApiException(400, "Missing required parameter 'membershipNo' when calling RetailMembershipV10Api->Lookup1");
            // verify the required parameter 'dateOfBirth' is set
            if (dateOfBirth == null)
                throw new ApiException(400, "Missing required parameter 'dateOfBirth' when calling RetailMembershipV10Api->Lookup1");

            var localVarPath = "/retailmembership/v1/customers/{membershipNo}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (membershipNo != null) localVarPathParams.Add("membershipNo", Configuration.ApiClient.ParameterToString(membershipNo)); // path parameter
            if (dateOfBirth != null) localVarQueryParams.Add("dateOfBirth", Configuration.ApiClient.ParameterToString(dateOfBirth)); // query parameter
            if (checkAlreadyUsed != null) localVarQueryParams.Add("checkAlreadyUsed", Configuration.ApiClient.ParameterToString(checkAlreadyUsed)); // query parameter

            // authentication (auth) required
            // http basic authentication required
            if (!String.IsNullOrEmpty(Configuration.Username) || !String.IsNullOrEmpty(Configuration.Password))
            {
                localVarHeaderParams["Authorization"] = "Basic " + ApiClient.Base64Encode(Configuration.Username + ":" + Configuration.Password);
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Lookup1", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LookupResponse2>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (LookupResponse2) Configuration.ApiClient.Deserialize(localVarResponse, typeof(LookupResponse2)));
            
        }

        /// <summary>
        /// Lookup Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>Task of LookupResponse2</returns>
        public async System.Threading.Tasks.Task<LookupResponse2> Lookup1Async (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null)
        {
             ApiResponse<LookupResponse2> localVarResponse = await Lookup1AsyncWithHttpInfo(membershipNo, dateOfBirth, checkAlreadyUsed);
             return localVarResponse.Data;

        }

        /// <summary>
        /// Lookup Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="membershipNo">Card number (Number found on the back of the card) of the Customer in form of an integer</param>
        /// <param name="dateOfBirth">Date of birth of the Customer</param>
        /// <param name="checkAlreadyUsed">Enables Customer Spine registration check. The flag modifies response entity according to the following rules: - customer registered on Spine, adds _IsAlreadyUsedOnDigital_ property with value _true_ - customer not registered - adds _IsAlreadyUsedOnDigital_ property with value _false_ - Spine check failed - no changes to response (optional)</param>
        /// <returns>Task of ApiResponse (LookupResponse2)</returns>
        public async System.Threading.Tasks.Task<ApiResponse<LookupResponse2>> Lookup1AsyncWithHttpInfo (double? membershipNo, DateTime? dateOfBirth, bool? checkAlreadyUsed = null)
        {
            // verify the required parameter 'membershipNo' is set
            if (membershipNo == null)
                throw new ApiException(400, "Missing required parameter 'membershipNo' when calling RetailMembershipV10Api->Lookup1");
            // verify the required parameter 'dateOfBirth' is set
            if (dateOfBirth == null)
                throw new ApiException(400, "Missing required parameter 'dateOfBirth' when calling RetailMembershipV10Api->Lookup1");

            var localVarPath = "/retailmembership/v1/customers/{membershipNo}";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (membershipNo != null) localVarPathParams.Add("membershipNo", Configuration.ApiClient.ParameterToString(membershipNo)); // path parameter
            if (dateOfBirth != null) localVarQueryParams.Add("dateOfBirth", Configuration.ApiClient.ParameterToString(dateOfBirth)); // query parameter
            if (checkAlreadyUsed != null) localVarQueryParams.Add("checkAlreadyUsed", Configuration.ApiClient.ParameterToString(checkAlreadyUsed)); // query parameter

            // authentication (auth) required
            // http basic authentication required
            if (!String.IsNullOrEmpty(Configuration.Username) || !String.IsNullOrEmpty(Configuration.Password))
            {
                localVarHeaderParams["Authorization"] = "Basic " + ApiClient.Base64Encode(Configuration.Username + ":" + Configuration.Password);
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.GET, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("Lookup1", localVarResponse);
                if (exception != null) throw exception;
            }

            return new ApiResponse<LookupResponse2>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                (LookupResponse2) Configuration.ApiClient.Deserialize(localVarResponse, typeof(LookupResponse2)));
            
        }

        /// <summary>
        /// Register - This operation is disabled Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns></returns>
        public void RegisterThisOperationIsDisabled (RegisterThisOperationIsDisabledRequest body)
        {
             RegisterThisOperationIsDisabledWithHttpInfo(body);
        }

        /// <summary>
        /// Register - This operation is disabled Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ApiResponse<Object> RegisterThisOperationIsDisabledWithHttpInfo (RegisterThisOperationIsDisabledRequest body)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling RetailMembershipV10Api->RegisterThisOperationIsDisabled");

            var localVarPath = "/retailmembership/v1/customers";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (auth) required
            // http basic authentication required
            if (!String.IsNullOrEmpty(Configuration.Username) || !String.IsNullOrEmpty(Configuration.Password))
            {
                localVarHeaderParams["Authorization"] = "Basic " + ApiClient.Base64Encode(Configuration.Username + ":" + Configuration.Password);
            }


            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) Configuration.ApiClient.CallApi(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RegisterThisOperationIsDisabled", localVarResponse);
                if (exception != null) throw exception;
            }

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

        /// <summary>
        /// Register - This operation is disabled Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task RegisterThisOperationIsDisabledAsync (RegisterThisOperationIsDisabledRequest body)
        {
             await RegisterThisOperationIsDisabledAsyncWithHttpInfo(body);

        }

        /// <summary>
        /// Register - This operation is disabled Model for the resource if defined below: &#x60;&#x60;&#x60;             {                 \&quot;Name\&quot; : {                     \&quot;Title\&quot; : \&quot;Mr\&quot;,                     \&quot;Forename\&quot; : \&quot;John\&quot;,                     \&quot;Surname\&quot; : \&quot;Jackson\&quot;,                     \&quot;OtherName\&quot; : \&quot;William\&quot;                 },                 \&quot;Address\&quot; : {                     \&quot;Address1\&quot; : \&quot;10\&quot;,                     \&quot;Address2\&quot; : \&quot;Downing Street\&quot;,                     \&quot;Town\&quot; : \&quot;London\&quot;,                     \&quot;Postcode\&quot; : \&quot;WC2B 4AA\&quot;,                     \&quot;County\&quot; : \&quot;Greater London\&quot;,                     \&quot;Country\&quot;  : \&quot;UK\&quot;                 },                 \&quot;Nationality\&quot; : \&quot;British\&quot;,                 \&quot;TelephoneNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;MobileNumber\&quot; : \&quot;01234567890\&quot;,                 \&quot;DateOfBirth\&quot; : \&quot;1955-01-30\&quot;,                 \&quot;EmailAddress\&quot; : \&quot;jack@rank.com\&quot;,                 \&quot;Club\&quot; : {                     \&quot;ClubNumber\&quot; : \&quot;45611\&quot;,                     \&quot;ClubName\&quot; : \&quot;Grosvenor casino\&quot;                 },                 \&quot;Contactable\&quot; : true,                 \&quot;ContactChannel\&quot; : \&quot;PEST\&quot;,                 \&quot;AgeVerified\&quot; : true,                 \&quot;AffId\&quot; : \&quot;2728\&quot;,                 \&quot;MembershipNo\&quot; : \&quot;12345\&quot;,                 \&quot;CardNo\&quot; : 67890             } &#x60;&#x60;&#x60; | Name          | Type      | Required                                          | Description                                                                       | Example   | |:- --           |:- --       |:- --                                               |:- --                                                                               |:- --       | |AffId          |string     |**yes** for Lookup Response, **no** for others     |When it&#39;s presented in a model the value should be 2728.                           |2728       | |Contactable    |bool       |**yes** for Register Request, **no** for others    |Shows whether customer is happy to receive the latest offers and information.      |True       | |ContactChannel |string     |**yes** for Register Request, **no** for others    |Shows prefered way of communication. P - Post, E - Email, S - SMS, T - Telephone.  |\&quot;PEST\&quot;     | For registration following input validation in place **Following fields must exists/must be non-null** - Name.Forename - Name.Surname - Address.Postcode - Club.ClubNumber **Following fields must follow a valid format** - Email address - valid email format - MobileNumber &amp; TelephoneNumber - starts with 0 or +44, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc) - Address.Postcode - valid UK postcode - DateOfBirth - must be of legal age (18) - Club.ClubNumber - Club number must be a valid Grsovenor casino. Use Venue details service to validate the detail before testing.
        /// </summary>
        /// <exception cref="IO.Swagger.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body"></param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ApiResponse<Object>> RegisterThisOperationIsDisabledAsyncWithHttpInfo (RegisterThisOperationIsDisabledRequest body)
        {
            // verify the required parameter 'body' is set
            if (body == null)
                throw new ApiException(400, "Missing required parameter 'body' when calling RetailMembershipV10Api->RegisterThisOperationIsDisabled");

            var localVarPath = "/retailmembership/v1/customers";
            var localVarPathParams = new Dictionary<String, String>();
            var localVarQueryParams = new Dictionary<String, String>();
            var localVarHeaderParams = new Dictionary<String, String>(Configuration.DefaultHeader);
            var localVarFormParams = new Dictionary<String, String>();
            var localVarFileParams = new Dictionary<String, FileParameter>();
            Object localVarPostBody = null;

            // to determine the Content-Type header
            String[] localVarHttpContentTypes = new String[] {
                "application/json"
            };
            String localVarHttpContentType = Configuration.ApiClient.SelectHeaderContentType(localVarHttpContentTypes);

            // to determine the Accept header
            String[] localVarHttpHeaderAccepts = new String[] {
                "application/json"
            };
            String localVarHttpHeaderAccept = Configuration.ApiClient.SelectHeaderAccept(localVarHttpHeaderAccepts);
            if (localVarHttpHeaderAccept != null)
                localVarHeaderParams.Add("Accept", localVarHttpHeaderAccept);

            // set "format" to json by default
            // e.g. /pet/{petId}.{format} becomes /pet/{petId}.json
            localVarPathParams.Add("format", "json");
            if (body != null && body.GetType() != typeof(byte[]))
            {
                localVarPostBody = Configuration.ApiClient.Serialize(body); // http body (model) parameter
            }
            else
            {
                localVarPostBody = body; // byte array
            }

            // authentication (auth) required
            // http basic authentication required
            if (!String.IsNullOrEmpty(Configuration.Username) || !String.IsNullOrEmpty(Configuration.Password))
            {
                localVarHeaderParams["Authorization"] = "Basic " + ApiClient.Base64Encode(Configuration.Username + ":" + Configuration.Password);
            }

            // make the HTTP request
            IRestResponse localVarResponse = (IRestResponse) await Configuration.ApiClient.CallApiAsync(localVarPath,
                Method.POST, localVarQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarFileParams,
                localVarPathParams, localVarHttpContentType);

            int localVarStatusCode = (int) localVarResponse.StatusCode;

            if (ExceptionFactory != null)
            {
                Exception exception = ExceptionFactory("RegisterThisOperationIsDisabled", localVarResponse);
                if (exception != null) throw exception;
            }

            
            return new ApiResponse<Object>(localVarStatusCode,
                localVarResponse.Headers.ToDictionary(x => x.Name, x => x.Value.ToString()),
                null);
        }

    }
}
